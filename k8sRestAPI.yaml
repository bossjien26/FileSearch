apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoapi-deployment
spec:
  selector:
    matchLabels:
      app: demoapi-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: demoapi-pod
    spec:
      containers:
        - name: demoapi-container
          image: file_search_api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
apiVersion: v1
kind: Service
metadata:
  name: demoapi-service
spec:
  selector:
    app: demoapi-pod
  ports:
    - port: 5000
      protocol: TCP
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: demo.k8s.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: demoapi-service
                port:
                  number: 5000
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
#     # kubernetes.io/ingress.class: istio
#     # kubernetes.io/ingress.class: nginx
#     # nginx.ingress.kubernetes.io/enable-cors: "false"
#     # nginx.ingress.kubernetes.io/cors-allow-origin: "*"
#     # nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
#   name: demoapi-ingress
# spec:
#   rules:
#     - host: demo.k8s.io
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: demoapi-service
#                 port:
#                   number: 5000
